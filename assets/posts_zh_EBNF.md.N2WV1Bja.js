import{_ as s,c as n,o as e,a6 as a}from"./chunks/framework.CwsuCNZ2.js";const g=JSON.parse('{"title":"EBNF","description":"","frontmatter":{"title":"EBNF","date":"2021-10-27T00:30:59.000Z","tags":["编译原理","EBNF"],"toc":true,"categories":["语言"]},"headers":[],"relativePath":"posts/zh/EBNF.md","filePath":"posts/zh/EBNF.md"}'),t={name:"posts/zh/EBNF.md"},l=a(`<h2 id="扩展巴科斯范式" tabindex="-1">扩展巴科斯范式 <a class="header-anchor" href="#扩展巴科斯范式" aria-label="Permalink to &quot;扩展巴科斯范式&quot;">​</a></h2><blockquote><p>参考来源 <a href="https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E5%B7%B4%E7%A7%91%E6%96%AF%E8%8C%83%E5%BC%8F" target="_blank" rel="noreferrer">Wikipedia</a></p></blockquote><p>一种表达形式语言文法的代码, EBNF 定义了把各符号序列分别指派非终结符的<strong>产生规则</strong></p><div class="language-ebnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ebnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>digit excluding zero = &quot;1&quot; | &quot;2&quot; | &quot;3&quot; | &quot;4&quot; | &quot;5&quot; | &quot;6&quot; | &quot;7&quot; | &quot;8&quot; | &quot;9&quot;;</span></span>
<span class="line"><span>digit = &quot;0&quot; | digit excluding zero;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>定义左端非终结符 <em>digit</em>。竖杠表示可供选择, 终结符被 <code>&quot;</code> 包围, 最后跟着 <code>;</code> 作为终止字符。</p><p>产生规则还可以包括由逗号分隔的一序列 <em>终结符</em> 或 <em>非终结符</em></p><div class="language-ebnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ebnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>twelve = &quot;1&quot;, &quot;2&quot;;</span></span>
<span class="line"><span>two hundred one = &quot;2&quot;, &quot;0&quot;, &quot;1&quot;;</span></span>
<span class="line"><span>three hundred twelve = &quot;3&quot;, twelve;</span></span>
<span class="line"><span>twelve thousand two hundred one = twelve, two hundred one;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>可以 <strong>省略</strong> 或 <strong>重复</strong> 的表达式可以通过花括号 <code>{...}</code> 表示: (大概相当于正则表达式的 <code>*</code>)</p><div class="language-ebnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ebnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>natural number = digit excluding zero, { digit };</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在这种情况下, 字符串 1, 2, ..., 10, 12345, ... 都是正确的表达式。表示这种情况, 于花括号内设立的所有东西 <em>可以重复任意次</em>, 包括根本不出现。</p><p>可选项可以通过方括号 <code>[...]</code> 表示: (大概相当于正则表达式的 <code>?</code>)</p><div class="language-ebnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ebnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>integer = &quot;0&quot; | [&quot;-&quot;], natural number;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>integer 是一个 <em>零(0)</em> 或可能 <em>前导可选的负号</em> 的一个自然数。</p><p>EBNF 还包括描述 <strong>指定次数的重复</strong>, 和 <strong>排除产生的某部分</strong> 或向 EBNF 文法 <strong>插入注释</strong> 的语法。</p><h2 id="符号表" tabindex="-1">符号表 <a class="header-anchor" href="#符号表" aria-label="Permalink to &quot;符号表&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">用途</th><th style="text-align:center;">符号表示</th></tr></thead><tbody><tr><td style="text-align:left;">定义</td><td style="text-align:center;"><code>=</code></td></tr><tr><td style="text-align:left;">串接</td><td style="text-align:center;"><code>,</code></td></tr><tr><td style="text-align:left;">终止</td><td style="text-align:center;"><code>;</code></td></tr><tr><td style="text-align:left;">分隔</td><td style="text-align:center;"><code>|</code></td></tr><tr><td style="text-align:left;">可选</td><td style="text-align:center;"><code>[...]</code></td></tr><tr><td style="text-align:left;">重复</td><td style="text-align:center;"><code>{...}</code></td></tr><tr><td style="text-align:left;">分组</td><td style="text-align:center;"><code>(...)</code></td></tr><tr><td style="text-align:left;">双引号</td><td style="text-align:center;"><code>&quot;...&quot;</code></td></tr><tr><td style="text-align:left;">单引号</td><td style="text-align:center;"><code>&#39;...&#39;</code></td></tr><tr><td style="text-align:left;">注释</td><td style="text-align:center;"><code>(*...*)</code></td></tr><tr><td style="text-align:left;">特殊序列</td><td style="text-align:center;"><code>?...?</code></td></tr><tr><td style="text-align:left;">除外</td><td style="text-align:center;"><code>-</code></td></tr></tbody></table><h2 id="约定" tabindex="-1">约定 <a class="header-anchor" href="#约定" aria-label="Permalink to &quot;约定&quot;">​</a></h2><ol><li><p>使用如下约定:</p><ul><li>EBNF 的每个元标识符否被写为 <em>连字号</em> 连接起来的一个或多个字；</li><li>结束于 &quot;-symbol&quot; 的元标识符是 EBNF 的终结符的名字。</li></ul></li><li><p>表示 EBNF 的每个操作符的正常字符和它所蕴涵的 <em><strong>优先级</strong></em>(顶部为<strong>最高</strong>优先级)为:</p><div class="language-text line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki nord vp-code"><code><span class="line"><span>* repetition-symbol</span></span>
<span class="line"><span>- except-symbol</span></span>
<span class="line"><span>, concatenate-symbol</span></span>
<span class="line"><span>| definiton-separator-symbol</span></span>
<span class="line"><span>= defining-symbol</span></span>
<span class="line"><span>; terminator-symbol</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>下列 <em>括号对</em> <strong>超越</strong> 正常优先级:</p><div class="language-text line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki nord vp-code"><code><span class="line"><span>‘first-quote-symbol  first-quote-symbol’</span></span>
<span class="line"><span>&quot;second-quote-symbol  second-quote-symbol&quot;</span></span>
<span class="line"><span>(*start-comment-symbol  end-comment-symbol*)</span></span>
<span class="line"><span>(start-group-symbol  end-group-symbol)</span></span>
<span class="line"><span>[start-option-symbol  end-option-symbol]</span></span>
<span class="line"><span>{start-repeat-symbol  end-repeat-symbol}</span></span>
<span class="line"><span>?special-sequence-symbol  special-sequence-symbol?</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ol><p>举例:</p><div class="language-ebnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ebnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>aa = &quot;A&quot;;</span></span>
<span class="line"><span>bb = 3 * aa, &quot;B&quot;;</span></span>
<span class="line"><span>cc = 3 * [aa], &quot;C&quot;;</span></span>
<span class="line"><span>dd = {aa}, &quot;D&quot;;</span></span>
<span class="line"><span>ee = aa, {aa}, &quot;E&quot;;</span></span>
<span class="line"><span>ff = 3 * aa, 3 * [aa], &quot;F&quot;;</span></span>
<span class="line"><span>gg = {3 * aa}, &quot;D&quot;;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>定义的终结字符串:</p><div class="language-text line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki nord vp-code"><code><span class="line"><span>aa: A</span></span>
<span class="line"><span>bb: AAAB</span></span>
<span class="line"><span>cc: C AC AAC AAAC</span></span>
<span class="line"><span>dd: D AD AAD AAAD ...</span></span>
<span class="line"><span>ee: AE AAE AAAE AAAAE ...</span></span>
<span class="line"><span>ff: AAAF AAAAF AAAAAF AAAAAAF</span></span>
<span class="line"><span>gg: D AAAD AAAAAAD ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="ebnf-bnf" tabindex="-1">EBNF &amp; BNF <a class="header-anchor" href="#ebnf-bnf" aria-label="Permalink to &quot;EBNF &amp; BNF&quot;">​</a></h2><blockquote><p>BNF 有 <strong>可选项</strong> 和 <strong>重复</strong> 不能直接表达的问题。</p></blockquote><p>可选项:</p><div class="language-ebnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ebnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>signed number = [sign, ] number;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>BNF 风格:</p><div class="language-bnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>signed number = sign, number | number;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>or</p><div class="language-ebnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ebnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>signed number = optional sign, number;</span></span>
<span class="line"><span>optional sign, = ε | sign, ; (*使用ε来清晰的指示空产生式*)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>重复:</p><div class="language-ebnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ebnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>number = { digit } digit;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>BNF风格:</p><div class="language-bnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>number = digit | number digit;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="ebnf-较-bnf-的优点" tabindex="-1">EBNF 较 BNF 的优点 <a class="header-anchor" href="#ebnf-较-bnf-的优点" aria-label="Permalink to &quot;EBNF 较 BNF 的优点&quot;">​</a></h2><p>BNF 的缺陷:</p><ul><li>BNF 自身使用了符号(<code>&lt;</code>, <code>&gt;</code>, <code>|</code>, <code>::=</code>), 定义会产生误解。</li><li>BNF 语法在一行只能表示一个规则。</li></ul><p>EBNF 解决了这些问题:</p><ul><li>终结符被严格包围在引号 (<code>&quot;...&quot;</code> 或 <code>&#39;...&#39;</code>) 中。给非终结符的尖括号 (<code>&quot;&lt;...&gt;&quot;</code>) 可以省略。</li><li>通常使用终止字符 <strong>分号</strong> 结束一个规则。</li></ul><p>进一步提供了定义 <strong>重复次数</strong>, <strong>排除法选择</strong> 和 <strong>注释</strong> 等增强机制。</p><p>原理上, EBNF 任何文法都可以用 BNF 表达。</p><p>EBNF 已经被 ISO 以 <em>ISO/IEC 14977:1996(E)</em> 标准化。</p><p>在某些场合任何扩展的 BNF 都被称为 EBNF。例如 W3C 使用 <a href="https://web.archive.org/web/20031203082847/http://www.w3c.org/TR/REC-xml#sec-notation" target="_blank" rel="noreferrer">one EBNF</a> 来规定 XML。</p><h2 id="扩展" tabindex="-1">扩展 <a class="header-anchor" href="#扩展" aria-label="Permalink to &quot;扩展&quot;">​</a></h2><p>根据 ISO 14977 标准, 提供了两个设施来扩展 EBNF。其一, 是指 EBNF 文法部分的特殊序列, 它是问号内包围内的任意文本, <strong>其解释超出了 EBNF 标准的范围</strong>。</p><div class="language-ebnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ebnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>space = ?US-ASCII character 32?</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其二, <strong>圆括号</strong> 在 EBNF 中不能放置到紧跟标识符之后。</p><div class="language-ebnf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ebnf</span><pre class="shiki nord vp-code"><code><span class="line"><span>something = foo (bar); (*无效*)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>EBNF 的扩展可以使用这种表示法。</p>`,49),p=[l];function o(r,i,d,c,u,b){return e(),n("div",null,p)}const h=s(t,[["render",o]]);export{g as __pageData,h as default};
