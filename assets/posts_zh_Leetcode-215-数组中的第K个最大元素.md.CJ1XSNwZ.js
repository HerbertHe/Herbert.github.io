import{_ as s,c as a,o as n,a6 as l}from"./chunks/framework.DqpHdag1.js";const D=JSON.parse('{"title":"Leetcode-215-数组中的第K个最大元素","description":"","frontmatter":{"title":"Leetcode-215-数组中的第K个最大元素","date":"2021-03-23T15:44:51.000Z","toc":true,"tags":["算法","面试"],"categories":["Leetcode"]},"headers":[],"relativePath":"posts/zh/Leetcode-215-数组中的第K个最大元素.md","filePath":"posts/zh/Leetcode-215-数组中的第K个最大元素.md"}'),e={name:"posts/zh/Leetcode-215-数组中的第K个最大元素.md"},p=l(`<h2 id="数组中的第k个最大元素" tabindex="-1">数组中的第K个最大元素 <a class="header-anchor" href="#数组中的第k个最大元素" aria-label="Permalink to &quot;数组中的第K个最大元素&quot;">​</a></h2><p>题见: <a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/" target="_blank" rel="noreferrer">数组中的第K个最大元素</a></p><h2 id="破题" tabindex="-1">破题 <a class="header-anchor" href="#破题" aria-label="Permalink to &quot;破题&quot;">​</a></h2><p>题目意思就是排序之后, 然后找到第几大的数字(不去重)</p><h2 id="题解" tabindex="-1">题解 <a class="header-anchor" href="#题解" aria-label="Permalink to &quot;题解&quot;">​</a></h2><p>其实整个题就两部分, 一个是排序, 另一个是取值</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">/**</span></span>
<span class="line"><span style="color:#616E88;"> * </span><span style="color:#ECEFF4;">@</span><span style="color:#8FBCBB;">param</span><span style="color:#ECEFF4;"> {</span><span style="color:#616E88;">number[]</span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9;"> nums</span></span>
<span class="line"><span style="color:#616E88;"> * </span><span style="color:#ECEFF4;">@</span><span style="color:#8FBCBB;">param</span><span style="color:#ECEFF4;"> {</span><span style="color:#616E88;">number</span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9;"> k</span></span>
<span class="line"><span style="color:#616E88;"> * </span><span style="color:#ECEFF4;">@</span><span style="color:#8FBCBB;">return</span><span style="color:#ECEFF4;"> {</span><span style="color:#616E88;">number</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#616E88;"> */</span></span>
<span class="line"><span style="color:#81A1C1;">var</span><span style="color:#88C0D0;"> findKthLargest</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> function</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">nums</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> k</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#D8DEE9;"> afterSorted</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> nums</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">sort</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> b</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> b</span><span style="color:#81A1C1;"> -</span><span style="color:#D8DEE9;"> a</span><span style="color:#D8DEE9FF;">)  </span><span style="color:#616E88;">// 先从大到小排序(不去重)</span></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9;"> afterSorted</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">k</span><span style="color:#81A1C1;"> -</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">]  </span><span style="color:#616E88;">// 再返回值</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>需要注意的是, js的<code>sort()</code>函数排序是首字符的ASCII码, 如果数字超过个位数那排的结果是错的</p></blockquote><p>从大到小排</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">sort</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> b</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> b</span><span style="color:#81A1C1;"> -</span><span style="color:#D8DEE9;"> a</span><span style="color:#D8DEE9FF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>从小到大排</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">sort</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> b</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> a</span><span style="color:#81A1C1;"> -</span><span style="color:#D8DEE9;"> b</span><span style="color:#D8DEE9FF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,12),o=[p];function r(t,c,E,y,i,d){return n(),a("div",null,o)}const b=s(e,[["render",r]]);export{D as __pageData,b as default};
