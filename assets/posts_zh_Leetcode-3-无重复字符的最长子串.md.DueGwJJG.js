import{_ as s,c as n,o as a,a6 as l}from"./chunks/framework.CwsuCNZ2.js";const b=JSON.parse('{"title":"Leetcode-3-无重复字符的最长子串","description":"","frontmatter":{"title":"Leetcode-3-无重复字符的最长子串","date":"2021-03-23T16:07:21.000Z","toc":true,"tags":["算法","面试"],"categories":["Leetcode"]},"headers":[],"relativePath":"posts/zh/Leetcode-3-无重复字符的最长子串.md","filePath":"posts/zh/Leetcode-3-无重复字符的最长子串.md"}'),p={name:"posts/zh/Leetcode-3-无重复字符的最长子串.md"},o=l(`<h2 id="无重复字符的最长子串" tabindex="-1">无重复字符的最长子串 <a class="header-anchor" href="#无重复字符的最长子串" aria-label="Permalink to &quot;无重复字符的最长子串&quot;">​</a></h2><p>题目: <a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/" target="_blank" rel="noreferrer">无重复字符的最长子串</a></p><h2 id="破题" tabindex="-1">破题 <a class="header-anchor" href="#破题" aria-label="Permalink to &quot;破题&quot;">​</a></h2><h3 id="自己想的解法" tabindex="-1">自己想的解法 <a class="header-anchor" href="#自己想的解法" aria-label="Permalink to &quot;自己想的解法&quot;">​</a></h3><p>其实整个流程大概分为两步</p><ol><li>分割字符, 构成字符集</li><li>根据字符集遍历, 然后组合出子串</li></ol><p>处理的临界情况为</p><ul><li>处理字符串长度为零的情况</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// 在js中下面的处理都可以</span></span>
<span class="line"><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">!</span><span style="color:#D8DEE9;">s</span><span style="color:#D8DEE9FF;">)  </span><span style="color:#616E88;">// 这是利用了js的 !&quot;&quot; === false的特性</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">length </span><span style="color:#81A1C1;">===</span><span style="color:#B48EAD;"> 0</span><span style="color:#D8DEE9FF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>处理字符串都是相同的字符</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// 这里利用了es6的Set集合这一特性</span></span>
<span class="line"><span style="color:#D8DEE9FF;">[</span><span style="color:#81A1C1;">...new</span><span style="color:#88C0D0;"> Set</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">split</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;&quot;</span><span style="color:#D8DEE9FF;">))]</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">length </span><span style="color:#81A1C1;">===</span><span style="color:#B48EAD;"> 1</span></span>
<span class="line"><span style="color:#616E88;">// s ---&gt; 字符数组 ---&gt; Set去重 ---&gt; 去重之后的数组长度</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><p><code>strBin</code>为所有字串的&quot;桶&quot;</p><ul><li>所有的单字符都是子串, 扔到桶里去</li><li>遍历越界时, 将之前组合的子串, 扔到桶里去</li><li>每次字符桶里已经有字符了, 把之前的组合子串扔到桶里去</li><li>遍历当前字符连续个数大于1时, 把之前的子串组合当前字符扔到桶里去</li></ul></li><li><p>返回<code>strBin</code>按照子串长度排序, 从而得到最后的答案</p></li></ul><h3 id="滑动窗口解法" tabindex="-1">滑动窗口解法 <a class="header-anchor" href="#滑动窗口解法" aria-label="Permalink to &quot;滑动窗口解法&quot;">​</a></h3><p>本质上来说, 跟自己想的解法没太大的区别, 但是滑动窗口把检查重复和遍历这些事情放在一起做了</p><p><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/wu-zhong-fu-zi-fu-de-zui-chang-zi-chuan-by-leetc-2/" target="_blank" rel="noreferrer">官方题解</a>的分析流程为:</p><ul><li>以 (a)bcabcbb 开始的最长字符串为 (abc)abcbb；</li><li>以 a(b)cabcbb 开始的最长字符串为 a(bca)bcbb；</li><li>以 ab(c)abcbb 开始的最长字符串为 ab(cab)cbb；</li><li>以 abc(a)bcbb 开始的最长字符串为 abc(abc)bb；</li><li>以 abca(b)cbb 开始的最长字符串为 abca(bc)bb；</li><li>以 abcab(c)bb 开始的最长字符串为 abcab(cb)b；</li><li>以 abcabc(b)b 开始的最长字符串为 abcabc(b)b；</li><li>以 abcabcb(b) 开始的最长字符串为 abcabcb(b)。</li></ul><p>分析流程:</p><ul><li>遍历字符串</li><li>以当前的字符为起始, 向后遍历找到无重复的子串</li></ul><h2 id="题解" tabindex="-1">题解 <a class="header-anchor" href="#题解" aria-label="Permalink to &quot;题解&quot;">​</a></h2><h3 id="自行实现的版本" tabindex="-1">自行实现的版本 <a class="header-anchor" href="#自行实现的版本" aria-label="Permalink to &quot;自行实现的版本&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">/**</span></span>
<span class="line"><span style="color:#616E88;"> * </span><span style="color:#ECEFF4;">@</span><span style="color:#8FBCBB;">param</span><span style="color:#ECEFF4;"> {</span><span style="color:#616E88;">string</span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9;"> s</span></span>
<span class="line"><span style="color:#616E88;"> * </span><span style="color:#ECEFF4;">@</span><span style="color:#8FBCBB;">return</span><span style="color:#ECEFF4;"> {</span><span style="color:#616E88;">number</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#616E88;"> */</span></span>
<span class="line"><span style="color:#81A1C1;">var</span><span style="color:#88C0D0;"> lengthOfLongestSubstring</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // 处理字符串长度为零</span></span>
<span class="line"><span style="color:#81A1C1;">    if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">length </span><span style="color:#81A1C1;">===</span><span style="color:#B48EAD;"> 0</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">return</span><span style="color:#B48EAD;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">    // 处理字符串都相同字母的情况</span></span>
<span class="line"><span style="color:#81A1C1;">    if</span><span style="color:#D8DEE9FF;"> ([</span><span style="color:#81A1C1;">...new</span><span style="color:#88C0D0;"> Set</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">split</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;&quot;</span><span style="color:#D8DEE9FF;">))]</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">length </span><span style="color:#81A1C1;">===</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#81A1C1;">        return</span><span style="color:#B48EAD;"> 1</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">    // 存储字符集个数</span></span>
<span class="line"><span style="color:#81A1C1;">    let</span><span style="color:#D8DEE9;"> charList</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9FF;"> []</span></span>
<span class="line"><span style="color:#81A1C1;">    let</span><span style="color:#D8DEE9;"> pos</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 0</span><span style="color:#616E88;"> // 字符集指针</span></span>
<span class="line"><span style="color:#81A1C1;">    let</span><span style="color:#D8DEE9;"> sum</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 0</span><span style="color:#616E88;"> // 字符指针</span></span>
<span class="line"><span style="color:#81A1C1;">    for</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> i</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> i</span><span style="color:#81A1C1;"> &lt;</span><span style="color:#D8DEE9;"> s</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">length</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> i</span><span style="color:#81A1C1;">++</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#81A1C1;">        if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">i</span><span style="color:#81A1C1;"> ===</span><span style="color:#B48EAD;"> 0</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">            charList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">push</span><span style="color:#D8DEE9FF;">([</span><span style="color:#D8DEE9;">s</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;">]</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">])</span></span>
<span class="line"><span style="color:#ECEFF4;">        }</span><span style="color:#81A1C1;"> else</span><span style="color:#81A1C1;"> if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">s</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">===</span><span style="color:#D8DEE9;"> s</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#81A1C1;"> -</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">&amp;&amp;</span><span style="color:#D8DEE9;"> s</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#81A1C1;"> -</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">!==</span><span style="color:#81A1C1;"> undefined</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">            // 存储</span></span>
<span class="line"><span style="color:#D8DEE9;">            charList</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">pos</span><span style="color:#D8DEE9FF;">][</span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">+=</span><span style="color:#B48EAD;"> 1</span></span>
<span class="line"><span style="color:#ECEFF4;">        }</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">            charList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">push</span><span style="color:#D8DEE9FF;">([</span><span style="color:#D8DEE9;">s</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;">]</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">])</span></span>
<span class="line"><span style="color:#D8DEE9;">            pos</span><span style="color:#81A1C1;"> +=</span><span style="color:#B48EAD;"> 1</span></span>
<span class="line"><span style="color:#ECEFF4;">        }</span></span>
<span class="line"><span style="color:#D8DEE9;">        sum</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> i</span><span style="color:#81A1C1;"> +</span><span style="color:#B48EAD;"> 1</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">    // 子串收集桶</span></span>
<span class="line"><span style="color:#81A1C1;">    let</span><span style="color:#D8DEE9;"> strBin</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9FF;"> []</span></span>
<span class="line"><span style="color:#D8DEE9;">    pos</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">    // 无法处理单字母emmmm</span></span>
<span class="line"><span style="color:#81A1C1;">    while</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">!!</span><span style="color:#D8DEE9;">charList</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">pos</span><span style="color:#D8DEE9FF;">]) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">        // 字符桶</span></span>
<span class="line"><span style="color:#81A1C1;">        let</span><span style="color:#D8DEE9;"> bin</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9FF;"> []</span></span>
<span class="line"><span style="color:#81A1C1;">        let</span><span style="color:#D8DEE9;"> strTmp</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;&quot;</span></span>
<span class="line"><span style="color:#81A1C1;">        for</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> i</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> pos</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> i</span><span style="color:#81A1C1;"> &lt;=</span><span style="color:#D8DEE9;"> charList</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">length</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> i</span><span style="color:#81A1C1;">++</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#81A1C1;">            if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">i</span><span style="color:#81A1C1;"> ===</span><span style="color:#D8DEE9;"> pos</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">                // 初始化遍历</span></span>
<span class="line"><span style="color:#D8DEE9;">                strTmp</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> charList</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">pos</span><span style="color:#D8DEE9FF;">][</span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;">]</span></span>
<span class="line"><span style="color:#D8DEE9;">                bin</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">push</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">charList</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">pos</span><span style="color:#D8DEE9FF;">][</span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;">])</span></span>
<span class="line"><span style="color:#D8DEE9;">                strBin</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">push</span><span style="color:#D8DEE9FF;">([</span><span style="color:#D8DEE9;">charList</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">pos</span><span style="color:#D8DEE9FF;">][</span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;">]</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">])</span></span>
<span class="line"><span style="color:#ECEFF4;">            }</span><span style="color:#81A1C1;"> else</span><span style="color:#81A1C1;"> if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">!</span><span style="color:#D8DEE9;">charList</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;">]) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">                strBin</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">push</span><span style="color:#D8DEE9FF;">([</span><span style="color:#D8DEE9;">strTmp</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> strTmp</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">length])</span></span>
<span class="line"><span style="color:#81A1C1;">                break</span></span>
<span class="line"><span style="color:#ECEFF4;">            }</span><span style="color:#81A1C1;"> else</span><span style="color:#81A1C1;"> if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">bin</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">includes</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">charList</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;">][</span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;">])) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">                strBin</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">push</span><span style="color:#D8DEE9FF;">([</span><span style="color:#D8DEE9;">strTmp</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> strTmp</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">length])</span></span>
<span class="line"><span style="color:#81A1C1;">                break</span></span>
<span class="line"><span style="color:#ECEFF4;">            }</span><span style="color:#81A1C1;"> else</span><span style="color:#81A1C1;"> if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">charList</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;">][</span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">&gt;</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">                strTmp</span><span style="color:#81A1C1;"> +=</span><span style="color:#D8DEE9;"> charList</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;">][</span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;">]</span></span>
<span class="line"><span style="color:#D8DEE9;">                strBin</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">push</span><span style="color:#D8DEE9FF;">([</span><span style="color:#D8DEE9;">strTmp</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> strTmp</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">length])</span></span>
<span class="line"><span style="color:#81A1C1;">                break</span></span>
<span class="line"><span style="color:#ECEFF4;">            }</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">                // 记录</span></span>
<span class="line"><span style="color:#D8DEE9;">                bin</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">push</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">charList</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;">][</span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;">])</span></span>
<span class="line"><span style="color:#D8DEE9;">                strTmp</span><span style="color:#81A1C1;"> +=</span><span style="color:#D8DEE9;"> charList</span><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;">][</span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;">]</span></span>
<span class="line"><span style="color:#ECEFF4;">            }</span></span>
<span class="line"><span style="color:#ECEFF4;">        }</span></span>
<span class="line"><span style="color:#D8DEE9;">        pos</span><span style="color:#81A1C1;"> +=</span><span style="color:#B48EAD;"> 1</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9;"> strBin</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">sort</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> b</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> b</span><span style="color:#D8DEE9FF;">[</span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9;"> a</span><span style="color:#D8DEE9FF;">[</span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;">])[</span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;">][</span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;">]</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><h3 id="滑动窗口" tabindex="-1">滑动窗口 <a class="header-anchor" href="#滑动窗口" aria-label="Permalink to &quot;滑动窗口&quot;">​</a></h3><p>官方题解的js版本为:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">var</span><span style="color:#88C0D0;"> lengthOfLongestSubstring</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> function</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // 哈希集合，记录每个字符是否出现过</span></span>
<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#D8DEE9;"> occ</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> new</span><span style="color:#88C0D0;"> Set</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#D8DEE9;"> n</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> s</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">length</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">    // 右指针，初始值为 -1，相当于我们在字符串的左边界的左侧，还没有开始移动</span></span>
<span class="line"><span style="color:#81A1C1;">    let</span><span style="color:#D8DEE9;"> rk</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> -</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> ans</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">    for</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> i</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> i</span><span style="color:#81A1C1;"> &lt;</span><span style="color:#D8DEE9;"> n</span><span style="color:#81A1C1;">;</span><span style="color:#81A1C1;"> ++</span><span style="color:#D8DEE9;">i</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#81A1C1;">        if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">i</span><span style="color:#81A1C1;"> !=</span><span style="color:#B48EAD;"> 0</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">            // 左指针向右移动一格，移除一个字符</span></span>
<span class="line"><span style="color:#D8DEE9;">            occ</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">delete</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">charAt</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">i</span><span style="color:#81A1C1;"> -</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">        }</span></span>
<span class="line"><span style="color:#81A1C1;">        while</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">rk</span><span style="color:#81A1C1;"> +</span><span style="color:#B48EAD;"> 1</span><span style="color:#81A1C1;"> &lt;</span><span style="color:#D8DEE9;"> n</span><span style="color:#81A1C1;"> &amp;&amp;</span><span style="color:#81A1C1;"> !</span><span style="color:#D8DEE9;">occ</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">has</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">charAt</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">rk</span><span style="color:#81A1C1;"> +</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">))) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">            // 不断地移动右指针</span></span>
<span class="line"><span style="color:#D8DEE9;">            occ</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">add</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">charAt</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">rk</span><span style="color:#81A1C1;"> +</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">            ++</span><span style="color:#D8DEE9;">rk</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">        }</span></span>
<span class="line"><span style="color:#616E88;">        // 第 i 到 rk 个字符是一个极长的无重复字符子串</span></span>
<span class="line"><span style="color:#D8DEE9;">        ans</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> Math</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">max</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">ans</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> rk</span><span style="color:#81A1C1;"> -</span><span style="color:#D8DEE9;"> i</span><span style="color:#81A1C1;"> +</span><span style="color:#B48EAD;"> 1</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9;"> ans</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,24),e=[o];function r(c,t,E,y,D,F){return a(),n("div",null,e)}const C=s(p,[["render",r]]);export{b as __pageData,C as default};
