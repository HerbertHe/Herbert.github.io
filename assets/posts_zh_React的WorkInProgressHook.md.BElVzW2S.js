import{_ as s,c as n,o as a,a6 as l}from"./chunks/framework.CwsuCNZ2.js";const F=JSON.parse('{"title":"React 的 WorkInProgressHook","description":"","frontmatter":{"title":"React 的 WorkInProgressHook","date":"2024-05-04T14:43:57.000Z","toc":true,"tags":["react","hook"]},"headers":[],"relativePath":"posts/zh/React的WorkInProgressHook.md","filePath":"posts/zh/React的WorkInProgressHook.md"}'),p={name:"posts/zh/React的WorkInProgressHook.md"},e=l(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>React 在数年前全面转向函数式编程，并引入了 hook 的概念。卡颂的 <a href="https://react.iamkasong.com/" target="_blank" rel="noreferrer">React 技术揭秘</a> 是很多的前端开发者进一步了解 react 的入门资料，但随着 react 的迭代更新，其底层实现可能发生了一些变化。这个本篇文章即是在讨论 <code>useCallback</code> 和 <code>useMemo</code> 的差异上，去阅读 react 底层实现源码上发现的一些问题。React 的源码很长，将分片去研究 react 的底层实现逻辑。</p><blockquote><p>本篇所使用的源码为 2024年5月4日的 react 主分支的实现。</p></blockquote><h2 id="hook-类型定义" tabindex="-1">Hook 类型定义 <a class="header-anchor" href="#hook-类型定义" aria-label="Permalink to &quot;Hook 类型定义&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">export</span><span style="color:#81A1C1;"> type</span><span style="color:#8FBCBB;"> Hook</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  memoizedState</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> any</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  baseState</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> any</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  baseQueue</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> Update</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">any</span><span style="color:#ECEFF4;">,</span><span style="color:#8FBCBB;"> any</span><span style="color:#ECEFF4;">&gt;</span><span style="color:#81A1C1;"> |</span><span style="color:#8FBCBB;"> null</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  queue</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> any</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  next</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> Hook</span><span style="color:#81A1C1;"> |</span><span style="color:#8FBCBB;"> null</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="相关变量声明" tabindex="-1">相关变量声明 <a class="header-anchor" href="#相关变量声明" aria-label="Permalink to &quot;相关变量声明&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// The work-in-progress fiber. I&#39;ve named it differently to distinguish it from</span></span>
<span class="line"><span style="color:#616E88;">// the work-in-progress hook.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// work-in-progress fiber，区分于work-in-progress hook。</span></span>
<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#88C0D0;"> currentlyRenderingFiber</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> Fiber</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">null</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> any</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Hooks are stored as a linked list on the fiber&#39;s memoizedState field. The</span></span>
<span class="line"><span style="color:#616E88;">// current hook list is the list that belongs to the current fiber. The</span></span>
<span class="line"><span style="color:#616E88;">// work-in-progress hook list is a new list that will be added to the</span></span>
<span class="line"><span style="color:#616E88;">// work-in-progress fiber.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Hooks 被存储为 fiber 的 memoizedState 字段中的一个链表。</span></span>
<span class="line"><span style="color:#616E88;">// current hook 列表是属于 current fiber 的列表。</span></span>
<span class="line"><span style="color:#616E88;">// work-in-progress hook 列表是一个新的列表，将被添加到 work-in-progress fiber 中。</span></span>
<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> currentHook</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> Hook</span><span style="color:#81A1C1;"> |</span><span style="color:#8FBCBB;"> null</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> null;</span></span>
<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> workInProgressHook</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> Hook</span><span style="color:#81A1C1;"> |</span><span style="color:#8FBCBB;"> null</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> null;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="mountworkinprogresshook" tabindex="-1">mountWorkInProgressHook <a class="header-anchor" href="#mountworkinprogresshook" aria-label="Permalink to &quot;mountWorkInProgressHook&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">function</span><span style="color:#88C0D0;"> mountWorkInProgressHook</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> Hook</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">  const</span><span style="color:#D8DEE9;"> hook</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> Hook</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">    memoizedState</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> null</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">    baseState</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> null</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9;">    baseQueue</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> null</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9;">    queue</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> null</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">    next</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> null</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">  if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">workInProgressHook</span><span style="color:#81A1C1;"> ===</span><span style="color:#81A1C1;"> null</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">    // This is the first hook in the list</span></span>
<span class="line"><span style="color:#616E88;">    // 列表中的第一个 hook</span></span>
<span class="line"><span style="color:#D8DEE9;">    currentlyRenderingFiber</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">memoizedState</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> workInProgressHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> hook</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Append to the end of the list</span></span>
<span class="line"><span style="color:#616E88;">    // 追加到列表的末尾</span></span>
<span class="line"><span style="color:#D8DEE9;">    workInProgressHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> workInProgressHook</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">next</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> hook</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span></span>
<span class="line"><span style="color:#81A1C1;">  return</span><span style="color:#D8DEE9;"> workInProgressHook</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="updateworkinprogresshook" tabindex="-1">updateWorkInProgressHook <a class="header-anchor" href="#updateworkinprogresshook" aria-label="Permalink to &quot;updateWorkInProgressHook&quot;">​</a></h2><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">function</span><span style="color:#88C0D0;"> updateWorkInProgressHook</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> Hook</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">  // This function is used both for updates and for re-renders triggered by a</span></span>
<span class="line"><span style="color:#616E88;">  // render phase update. It assumes there is either a current hook we can</span></span>
<span class="line"><span style="color:#616E88;">  // clone, or a work-in-progress hook from a previous render pass that we can</span></span>
<span class="line"><span style="color:#616E88;">  // use as a base.</span></span>
<span class="line"><span style="color:#616E88;">  // 这个函数既用于更新，也用于由渲染阶段更新触发的重新渲染。</span></span>
<span class="line"><span style="color:#616E88;">  // 它假设有一个可以 clone 的 current hook，或者一个之前渲染的 work-in-progress hook，可以作为基础。</span></span>
<span class="line"><span style="color:#81A1C1;">  let</span><span style="color:#D8DEE9;"> nextCurrentHook</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> null</span><span style="color:#81A1C1;"> |</span><span style="color:#8FBCBB;"> Hook</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">  if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">currentHook</span><span style="color:#81A1C1;"> ===</span><span style="color:#81A1C1;"> null</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#D8DEE9;"> current</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> currentlyRenderingFiber</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">alternate</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // WIP Fiber 的 alternate 属性指向 current Fiber</span></span>
<span class="line"><span style="color:#81A1C1;">    if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">current</span><span style="color:#81A1C1;"> !==</span><span style="color:#81A1C1;"> null</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">      nextCurrentHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> current</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">memoizedState</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">      nextCurrentHook</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> null;</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">    nextCurrentHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> currentHook</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">next</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">  let</span><span style="color:#D8DEE9;"> nextWorkInProgressHook</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> null</span><span style="color:#81A1C1;"> |</span><span style="color:#8FBCBB;"> Hook</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">  if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">workInProgressHook</span><span style="color:#81A1C1;"> ===</span><span style="color:#81A1C1;"> null</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">    nextWorkInProgressHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> currentlyRenderingFiber</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">memoizedState</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;">  // WIP Fiber 的 memoizedState 属性指向 work-in-progress hook</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">    nextWorkInProgressHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> workInProgressHook</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">next</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">  if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">nextWorkInProgressHook</span><span style="color:#81A1C1;"> !==</span><span style="color:#81A1C1;"> null</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">    // There&#39;s already a work-in-progress. Reuse it.</span></span>
<span class="line"><span style="color:#616E88;">    // 有已经存在的 work-in-progress。复用它。</span></span>
<span class="line"><span style="color:#D8DEE9;">    workInProgressHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> nextWorkInProgressHook</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">    nextWorkInProgressHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> workInProgressHook</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">next</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">    currentHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> nextCurrentHook</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Clone from the current hook.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">    if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">nextCurrentHook</span><span style="color:#81A1C1;"> ===</span><span style="color:#81A1C1;"> null</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#81A1C1;">      const</span><span style="color:#D8DEE9;"> currentFiber</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> currentlyRenderingFiber</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">alternate</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">      if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">currentFiber</span><span style="color:#81A1C1;"> ===</span><span style="color:#81A1C1;"> null</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">        // This is the initial render. This branch is reached when the component</span></span>
<span class="line"><span style="color:#616E88;">        // suspends, resumes, then renders an additional hook.</span></span>
<span class="line"><span style="color:#616E88;">        // Should never be reached because we should switch to the mount dispatcher first.</span></span>
<span class="line"><span style="color:#616E88;">        // 这是初始渲染。这个分支在组件挂起、恢复后，再渲染一个额外的 hook 时被触发。</span></span>
<span class="line"><span style="color:#616E88;">        // 理论上永远不会被触发，因为我们应该先切换到 mount dispatcher。</span></span>
<span class="line"><span style="color:#81A1C1;">        throw</span><span style="color:#81A1C1;"> new</span><span style="color:#88C0D0;"> Error</span><span style="color:#D8DEE9FF;">(</span></span>
<span class="line"><span style="color:#ECEFF4;">          &#39;</span><span style="color:#A3BE8C;">Update hook called on initial render. This is likely a bug in React. Please file an issue.</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        )</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">      }</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">        // This is an update. We should always have a current hook.</span></span>
<span class="line"><span style="color:#616E88;">        // 这是更新。我们应该总是有 current hook。</span></span>
<span class="line"><span style="color:#81A1C1;">        throw</span><span style="color:#81A1C1;"> new</span><span style="color:#88C0D0;"> Error</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">Rendered more hooks than during the previous render.</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">      }</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">    currentHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> nextCurrentHook</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#D8DEE9;"> newHook</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> Hook</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">      memoizedState</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> currentHook</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">memoizedState</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">      baseState</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> currentHook</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">baseState</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9;">      baseQueue</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> currentHook</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">baseQueue</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9;">      queue</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> currentHook</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">queue</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">      next</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> null</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">    if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">workInProgressHook</span><span style="color:#81A1C1;"> ===</span><span style="color:#81A1C1;"> null</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">      // This is the first hook in the list.</span></span>
<span class="line"><span style="color:#616E88;">      // 这是列表中的第一个 hook。</span></span>
<span class="line"><span style="color:#D8DEE9;">      currentlyRenderingFiber</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">memoizedState</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> workInProgressHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> newHook</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">      // Append to the end of the list.</span></span>
<span class="line"><span style="color:#616E88;">      // 追加到列表的末尾。</span></span>
<span class="line"><span style="color:#D8DEE9;">      workInProgressHook</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> workInProgressHook</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">next</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> newHook</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span></span>
<span class="line"><span style="color:#81A1C1;">  return</span><span style="color:#D8DEE9;"> workInProgressHook</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br></div></div>`,11),o=[e];function r(c,t,i,E,y,b){return a(),n("div",null,o)}const C=s(p,[["render",r]]);export{F as __pageData,C as default};
