import{_ as s,c as a,o as n,a6 as l}from"./chunks/framework.DqpHdag1.js";const C=JSON.parse('{"title":"迭代器辅助方法","description":"","frontmatter":{"title":"迭代器辅助方法","date":"2024-04-27T18:01:57.000Z","toc":true,"tags":["ECMAScript","V8","iterator"]},"headers":[],"relativePath":"posts/zh/迭代器辅助方法.md","filePath":"posts/zh/迭代器辅助方法.md"}'),p={name:"posts/zh/迭代器辅助方法.md"},o=l(`<blockquote><p>本篇文章来源于 v8.dev, 原文链接: <a href="https://v8.dev/features/iterator-helpers" target="_blank" rel="noreferrer">https://v8.dev/features/iterator-helpers</a>, 作者: Rezvan Mahdavi Hezaveh</p></blockquote><p><em>迭代器辅助方法(Iterator helpers)</em> 是迭代器原型上的新方法集合，旨在帮助迭代器的通用使用。自迭代器原型上存在这些辅助方法开始，任何在其原型链上有 <code>Iterator.prototype</code> 的对象（如：数组迭代器）都会获得这些方法。 在下面的子章节，我们将解释这些迭代器辅助方法。所有提供的示例都在博客存档页面中工作，该页面包含博客文章列表，说明了迭代器辅助方法如何有助于查找和处理帖子。你可以在 <a href="https://v8.dev/blog" target="_blank" rel="noreferrer">V8 博客页面</a> 中进行尝试。</p><h2 id="map-mapperfn" tabindex="-1">.map(mapperFn) <a class="header-anchor" href="#map-mapperfn" aria-label="Permalink to &quot;.map(mapperFn)&quot;">​</a></h2><p><code>map</code> 接收一个 mapper 函数作为参数。此辅助方法返回值的迭代器，其中 mapper 函数作用于原始迭代器值。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Get the list of posts, return a list of their text content (titles) and log them.</span></span>
<span class="line"><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> post</span><span style="color:#81A1C1;"> of</span><span style="color:#D8DEE9;"> posts</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">map</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">textContent</span><span style="color:#D8DEE9FF;">)) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">  console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">post</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="filter-filterfn" tabindex="-1">.filter(filterFn) <a class="header-anchor" href="#filter-filterfn" aria-label="Permalink to &quot;.filter(filterFn)&quot;">​</a></h2><p><code>filter</code> 接收一个 filter 函数作为参数。此辅助方法返回值的迭代器，其中 filter 函数返回判断为真的原始迭代器值。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Filter blog posts that includes \`V8\` in their text content (titles) and log them.</span></span>
<span class="line"><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> post</span><span style="color:#81A1C1;"> of</span><span style="color:#D8DEE9;"> posts</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">filter</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">textContent</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">includes</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">V8</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">))) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">  console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">post</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="take-limit" tabindex="-1">.take(limit) <a class="header-anchor" href="#take-limit" aria-label="Permalink to &quot;.take(limit)&quot;">​</a></h2><p><code>take</code> 接收一个整型作为参数。此辅助方法从原始迭代器返回一个值的迭代器，最多为 <code>limit</code> 个。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Filter blog posts that includes \`V8\` in their text content (titles) and log them.</span></span>
<span class="line"><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> post</span><span style="color:#81A1C1;"> of</span><span style="color:#D8DEE9;"> posts</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">filter</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">textContent</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">includes</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">V8</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">))) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">  console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">post</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="drop-limit" tabindex="-1">.drop(limit) <a class="header-anchor" href="#drop-limit" aria-label="Permalink to &quot;.drop(limit)&quot;">​</a></h2><p><code>drop</code> 接收一个整型作为参数。此辅助方法从原始迭代器返回一个值的迭代器，跳过 <code>limit</code> 个值。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Drop 10 recent blog posts and log the rest of them.</span></span>
<span class="line"><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> post</span><span style="color:#81A1C1;"> of</span><span style="color:#D8DEE9;"> posts</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">drop</span><span style="color:#D8DEE9FF;">(</span><span style="color:#B48EAD;">10</span><span style="color:#D8DEE9FF;">)) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">  console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">post</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="flatmap-mapperfn" tabindex="-1">.flatMap(mapperFn) <a class="header-anchor" href="#flatmap-mapperfn" aria-label="Permalink to &quot;.flatMap(mapperFn)&quot;">​</a></h2><p><code>flatMap</code> 接收一个 mapper 函数作为参数。此辅助方法返回一个通过有原始迭代器值调用 mapper 函数返回值的迭代器。如此，通过这个辅助方法返回一个由 mapper 函数展开的迭代器。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Get list of tags of the blog posts and log them. Each post can have more than</span></span>
<span class="line"><span style="color:#616E88;">// one tag.</span></span>
<span class="line"><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> tag</span><span style="color:#81A1C1;"> of</span><span style="color:#D8DEE9;"> posts</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">flatMap</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">.tag</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">())) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">tag</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">textContent</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="reduce-reducer-initialvalue" tabindex="-1">.reduce(reducer[, initialValue]) <a class="header-anchor" href="#reduce-reducer-initialvalue" aria-label="Permalink to &quot;.reduce(reducer[, initialValue])&quot;">​</a></h2><p><code>reduce</code> 接收一个 reducer 函数和一个可选的初始值。此辅助方法返回一个值作为迭代器每个值调用 reducer 函数的结果，同时追踪 reducer 函数的最后一个结果。初始值被用于 reducer 函数的起点，当它进行处理的时候，其为迭代器的第一个值。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Get list of tags for all posts.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> tagLists</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> posts</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">flatMap</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">.tag</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">())</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Get text context for each tag in the list.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> tags</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> tagLists</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">map</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">textContent</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Counts posts with security tag.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> count</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> tags</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">reduce</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">sum</span><span style="color:#ECEFF4;"> ,</span><span style="color:#D8DEE9;"> value</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> sum</span><span style="color:#81A1C1;"> +</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">value</span><span style="color:#81A1C1;"> ===</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">security</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;"> ?</span><span style="color:#B48EAD;"> 1</span><span style="color:#81A1C1;"> :</span><span style="color:#B48EAD;"> 0</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 0</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">count</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="toarray" tabindex="-1">.toArray() <a class="header-anchor" href="#toarray" aria-label="Permalink to &quot;.toArray()&quot;">​</a></h2><p><code>toArray</code> 从迭代器返回一个数组。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Create an array from the list of 10 recent blog posts.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> arr</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> posts</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">take</span><span style="color:#D8DEE9FF;">(</span><span style="color:#B48EAD;">10</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">toArray</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="foreach-fn" tabindex="-1">.forEach(fn) <a class="header-anchor" href="#foreach-fn" aria-label="Permalink to &quot;.forEach(fn)&quot;">​</a></h2><p><code>forEach</code> 接收一个函数作为参数，并在迭代器每个元素上进行调用。这个辅助方法作为它的副作用进行调用并且返回 <code>undefined</code>。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Get the dates that at least one blog post is published and log them.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> dates</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> new</span><span style="color:#88C0D0;"> Set</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> forEach</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> posts</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">forEach</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> dates</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">add</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelector</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">time</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">dates</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="some-fn" tabindex="-1">.some(fn) <a class="header-anchor" href="#some-fn" aria-label="Permalink to &quot;.some(fn)&quot;">​</a></h2><p><code>some</code> 接收一个判断函数(predicate function) 作为参数。这个辅助方法当某些迭代器元素调用判断函数返回为真的时候，返回 <code>true</code>。这个迭代器在 <code>some</code> 被调用之后被消费。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Find out if text content (title) of any blog post includes the \`Iterators\`</span></span>
<span class="line"><span style="color:#616E88;">// keyword.</span></span>
<span class="line"><span style="color:#D8DEE9;">posts</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">some</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">textContent</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">includes</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">Iterators</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="every-fn" tabindex="-1">.every(fn) <a class="header-anchor" href="#every-fn" aria-label="Permalink to &quot;.every(fn)&quot;">​</a></h2><p><code>every</code> 接收一个判断函数作为参数。这个辅助方法当所有迭代器元素调用判断函数返回为真的时候，返回 <code>true</code>。这个迭代器在 <code>every</code> 被调用之后被消费。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Find out if text content (title) of all blog post includes the \`V8\` keyword.</span></span>
<span class="line"><span style="color:#D8DEE9;">posts</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">every</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">textContent</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">includes</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">V8</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="find-fn" tabindex="-1">.find(fn) <a class="header-anchor" href="#find-fn" aria-label="Permalink to &quot;.find(fn)&quot;">​</a></h2><p><code>find</code> 接收一个判断函数(predicate function) 作为参数。此辅助方法返回满足判断函数的迭代器的第一个值，或者返回 <code>undefined</code>（如果迭代器没有值）。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Log the text content (title) of the recent blog post includes \`V8\` keyword.</span></span>
<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">posts</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">values</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">find</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">textContent</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">includes</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">V8</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">textContent</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="iterator-from-object" tabindex="-1">Iterator.from(object) <a class="header-anchor" href="#iterator-from-object" aria-label="Permalink to &quot;Iterator.from(object)&quot;">​</a></h2><p><code>from</code> 是一个静态方法，并接收一个对象作为参数。如果 <code>object</code> 已经是一个迭代器的实例，被这个辅助方法直接返回。如果 <code>object</code> 有 <code>Symbol.iterator</code>，也就意味着是一个可迭代的对象，它的 <code>Symbol.iterator</code> 方法将会被此辅助函数调用并返回。此外，一个新的 <code>Iterator</code> 对象（继承于 <code>Iterator.prototype</code>，并且有 <code>next()</code> 和 <code>return()</code> 方法）被创建包裹为 <code>object</code>，被此辅助方法返回。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Select the list of blog posts from a blog archive page.</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> posts</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> document</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">querySelectorAll</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">li:not(header li)</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// First create an iterator from the posts. Then, log the text content (title) of </span></span>
<span class="line"><span style="color:#616E88;">// the recent blog post that includes the \`V8\` keyword.</span></span>
<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">Iterator</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">from</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">posts</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">find</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">textContent</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">includes</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">V8</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">textContent</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="可用性" tabindex="-1">可用性 <a class="header-anchor" href="#可用性" aria-label="Permalink to &quot;可用性&quot;">​</a></h2><p>迭代器辅助方法在 V8 v12.2 版本推出。</p><h2 id="支持情况" tabindex="-1">支持情况 <a class="header-anchor" href="#支持情况" aria-label="Permalink to &quot;支持情况&quot;">​</a></h2><ul><li><a href="https://chromestatus.com/feature/5102502917177344" target="_blank" rel="noreferrer">Chrome 122+</a></li><li><s><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1568906" target="_blank" rel="noreferrer">Firefox</a></s></li><li><s><a href="https://bugs.webkit.org/show_bug.cgi?id=248650" target="_blank" rel="noreferrer">Safari</a></s></li><li><s>Node.js</s></li><li><a href="https://github.com/zloirock/core-js#iterator-helpers" target="_blank" rel="noreferrer">Babel</a></li></ul>`,42),e=[o];function t(r,c,E,y,i,F){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{C as __pageData,d as default};
