import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.9818e7a8.js";const C=JSON.parse('{"title":"有趣的JavaScript正则表达式","description":"","frontmatter":{"title":"有趣的JavaScript正则表达式","date":"2021-04-11T08:32:35.000Z","toc":true,"tags":["JavaScript"]},"headers":[],"relativePath":"posts/zh/有趣的JavaScript正则表达式.md","filePath":"posts/zh/有趣的JavaScript正则表达式.md"}'),l={name:"posts/zh/有趣的JavaScript正则表达式.md"},e=p(`<h2 id="正则表达式" tabindex="-1">正则表达式 <a class="header-anchor" href="#正则表达式" aria-label="Permalink to &quot;正则表达式&quot;">​</a></h2><p>正则表达式被广泛用于文本的提取和测试, 相比于编译原理来说它足够的简单; 而相较于字符匹配来说, 又足够的功能强大。著名的markdown解析器 <code>marked.js</code> 即是使用来进行解析的, 然后生成markdown语法树进行渲染。而且正则表达式被绝大多数的高级编程语言支持, 除了实现的程度和实现的方法不太一致之外, 均可以得到很好的通用。</p><p>正则表达式上手较为容易而且写法各异, 但想精通比较困难, 如何快速上手和提高正则的执行效率就不赘述了。</p><h2 id="有趣的javascript正则表达式" tabindex="-1">有趣的JavaScript正则表达式 <a class="header-anchor" href="#有趣的javascript正则表达式" aria-label="Permalink to &quot;有趣的JavaScript正则表达式&quot;">​</a></h2><p>与匹配相关的JavaScript相关函数主要是 <code>String.prototype.match()</code>、<code>RegExp.prototype.test()</code> 和 <code>RegExp.prototype.exec()</code></p><p>相关MDN文档如下:</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match" target="_blank" rel="noreferrer">String.prototype.match()</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test" target="_blank" rel="noreferrer">RegExp.prototype.test()</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec" target="_blank" rel="noreferrer">RegExp.prototype.exec()</a></li></ul><h2 id="一个有趣的-bug" tabindex="-1">一个有趣的&quot;BUG&quot; <a class="header-anchor" href="#一个有趣的-bug" aria-label="Permalink to &quot;一个有趣的&quot;BUG&quot;&quot;">​</a></h2><p>下述代码节选自 <a href="https://github.com/HerbertHe/olex/blob/main/src/core/lex/lexer.ts#L14" target="_blank" rel="noreferrer">OLEX</a></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki nord"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">tex</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">\`</span><span style="color:#EBCB8B;">\\\\</span><span style="color:#A3BE8C;">documnetclass{article}</span><span style="color:#EBCB8B;">\\n\\\\</span><span style="color:#A3BE8C;">usepackage{sdfsfsdf}</span><span style="color:#EBCB8B;">\\n\\\\</span><span style="color:#A3BE8C;">usepackage{9ubb}</span><span style="color:#EBCB8B;">\\n\\\\</span><span style="color:#A3BE8C;">usepackage{example}</span><span style="color:#ECEFF4;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">usepackageRegex</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">/</span><span style="color:#EBCB8B;">\\\\usepackage\\s</span><span style="color:#81A1C1;">*</span><span style="color:#ECEFF4;">(</span><span style="color:#EBCB8B;">\\[</span><span style="color:#ECEFF4;">([</span><span style="color:#EBCB8B;">a-zA-Z0-9 </span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">+</span><span style="color:#ECEFF4;">)</span><span style="color:#EBCB8B;">\\]</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">?</span><span style="color:#EBCB8B;">\\s</span><span style="color:#81A1C1;">*</span><span style="color:#EBCB8B;">\\{</span><span style="color:#ECEFF4;">([</span><span style="color:#EBCB8B;">a-zA-Z0-9\\-</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">+</span><span style="color:#ECEFF4;">)</span><span style="color:#EBCB8B;">\\}</span><span style="color:#ECEFF4;">/</span><span style="color:#81A1C1;">g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">export</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">PackageChecker</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> (</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">tex</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">packages</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">PackagesType</span></span>
<span class="line"><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">PackageCheckerType</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">!</span><span style="color:#D8DEE9;">usepackageRegex</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">test</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">tex</span><span style="color:#D8DEE9FF;">)) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#ECEFF4;">        </span><span style="color:#616E88;">// 没使用额外的包</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> [</span><span style="color:#81A1C1;">true</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&quot;&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">tex</span><span style="color:#D8DEE9FF;">]</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ECEFF4;">    </span><span style="color:#616E88;">// 注意上面会改变lastIndex的位置, 需要进行重置</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ECEFF4;">    </span><span style="color:#616E88;">// ---- 注意这里 Attention Here ----</span></span>
<span class="line"><span style="color:#ECEFF4;">    </span><span style="color:#616E88;">// usepackageRegex.lastIndex = 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">packsSet</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">new</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">Set</span><span style="color:#D8DEE9FF;">([</span><span style="color:#81A1C1;">...</span><span style="color:#D8DEE9;">packages</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">keys</span><span style="color:#D8DEE9FF;">()])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pack</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">while</span><span style="color:#D8DEE9FF;"> ((</span><span style="color:#D8DEE9;">pack</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">usepackageRegex</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">exec</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">tex</span><span style="color:#D8DEE9FF;">)) </span><span style="color:#81A1C1;">!==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">null</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">pack</span><span style="color:#D8DEE9FF;">)  </span><span style="color:#616E88;">// 注意这里的打印值</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">!</span><span style="color:#D8DEE9;">packsSet</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">has</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">pack</span><span style="color:#D8DEE9FF;">[</span><span style="color:#B48EAD;">3</span><span style="color:#D8DEE9FF;">])) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> [</span><span style="color:#81A1C1;">false</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pack</span><span style="color:#D8DEE9FF;">[</span><span style="color:#B48EAD;">3</span><span style="color:#D8DEE9FF;">]</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">tex</span><span style="color:#D8DEE9FF;">]</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> [</span><span style="color:#81A1C1;">true</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&quot;&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">tex</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">replace</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">usepackageRegex</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&quot;&quot;</span><span style="color:#D8DEE9FF;">)]</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><blockquote><p>上述的注意打印值的部分输出的结果会是什么呢？第一次全局匹配的结果是 <code>\\\\usepackage{sdfsfsdf}</code> 还是 <code>\\\\usepackage{9ubb}</code>？这是个问题。</p></blockquote><p>如果把注意部分注释掉的代码, 取消注释结果又是什么呢？</p><p>因此就引出了一个非常值得注意的正则表达式属性 <code>lastIndex</code>, 而 <code>test()</code> 和 <code>exec()</code> 均会改变 <code>lastIndex</code>的值。这个属性可以理解为正则表达式匹配的指针, 下一次的匹配是从 <code>lastIndex</code> 的值开始的。在上述的代码中, 使用了 <code>test()</code> 方法逻辑对函数执行效率进行提高, 因此下面的匹配使用 <code>exec()</code> 的结果中, <strong>匹配从 <code>\\\\usepackage{9ubb}</code> 开始!</strong></p><p>为了得到正确的结果, 则必须对 <code>lastIndex</code> 的值进行重置</p><h2 id="拓展-——-全局匹配结果的问题" tabindex="-1">拓展 —— 全局匹配结果的问题 <a class="header-anchor" href="#拓展-——-全局匹配结果的问题" aria-label="Permalink to &quot;拓展 —— 全局匹配结果的问题&quot;">​</a></h2><p>JavaScript中为了匹配特定字符串的特定匹配分组的值, 只能采取循环 <code>exec()</code> 的方式, 因为匹配不到之时返回的结果为 <strong>null</strong></p><p>因此我们可以通过下面的方法, 来全局匹配文本的特定部分</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki nord"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">tex</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">\`</span><span style="color:#EBCB8B;">\\\\</span><span style="color:#A3BE8C;">documnetclass{article}</span><span style="color:#EBCB8B;">\\n\\\\</span><span style="color:#A3BE8C;">usepackage{sdfsfsdf}</span><span style="color:#EBCB8B;">\\n\\\\</span><span style="color:#A3BE8C;">usepackage{9ubb}</span><span style="color:#EBCB8B;">\\n\\\\</span><span style="color:#A3BE8C;">usepackage{example}</span><span style="color:#ECEFF4;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">usepackageRegex</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">/</span><span style="color:#EBCB8B;">\\\\usepackage\\s</span><span style="color:#81A1C1;">*</span><span style="color:#ECEFF4;">(</span><span style="color:#EBCB8B;">\\[</span><span style="color:#ECEFF4;">([</span><span style="color:#EBCB8B;">a-zA-Z0-9 </span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">+</span><span style="color:#ECEFF4;">)</span><span style="color:#EBCB8B;">\\]</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">?</span><span style="color:#EBCB8B;">\\s</span><span style="color:#81A1C1;">*</span><span style="color:#EBCB8B;">\\{</span><span style="color:#ECEFF4;">([</span><span style="color:#EBCB8B;">a-zA-Z0-9\\-</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">+</span><span style="color:#ECEFF4;">)</span><span style="color:#EBCB8B;">\\}</span><span style="color:#ECEFF4;">/</span><span style="color:#81A1C1;">g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pack</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">while</span><span style="color:#D8DEE9FF;"> ((</span><span style="color:#D8DEE9;">pack</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">usepackageRegex</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">exec</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">tex</span><span style="color:#D8DEE9FF;">)) </span><span style="color:#81A1C1;">!==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">null</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">pack</span><span style="color:#D8DEE9FF;">)  </span><span style="color:#616E88;">// 注意这里的打印值</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,18),o=[e];function c(r,t,E,y,F,D){return a(),n("div",null,o)}const b=s(l,[["render",c]]);export{C as __pageData,b as default};
